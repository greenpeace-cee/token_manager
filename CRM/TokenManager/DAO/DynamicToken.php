<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from token_manager/xml/schema/CRM/TokenManager/DynamicToken.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:5563476ee3c3ddaad7e901431691b76c)
 */
use CRM_TokenManager_ExtensionUtil as E;

/**
 * Database access object for the DynamicToken entity.
 */
class CRM_TokenManager_DAO_DynamicToken extends CRM_Core_DAO {
  const EXT = E::LONG_NAME;
  const TABLE_ADDED = '';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_dynamic_token';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Unique DynamicToken ID
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $id;

  /**
   * Entity name of the token
   *
   * @var string
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $entity_name;

  /**
   * Field name of the token
   *
   * @var string
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $field_name;

  /**
   * Optional Smarty variable name of the token
   *
   * @var string
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $smarty_variable_name;

  /**
   * Value of the Token
   *
   * @var string
   *   (SQL type: varchar(1000))
   *   Note that values will be retrieved from the database as a string.
   */
  public $value;

  /**
   * Description of the Token
   *
   * @var string
   *   (SQL type: varchar(1000))
   *   Note that values will be retrieved from the database as a string.
   */
  public $description;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_dynamic_token';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? E::ts('Dynamic Tokens') : E::ts('Dynamic Token');
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => E::ts('Unique DynamicToken ID'),
          'required' => TRUE,
          'where' => 'civicrm_dynamic_token.id',
          'table_name' => 'civicrm_dynamic_token',
          'entity' => 'DynamicToken',
          'bao' => 'CRM_TokenManager_DAO_DynamicToken',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
          ],
          'readonly' => TRUE,
          'add' => NULL,
        ],
        'entity_name' => [
          'name' => 'entity_name',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Entity Name'),
          'description' => E::ts('Entity name of the token'),
          'required' => TRUE,
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'civicrm_dynamic_token.entity_name',
          'table_name' => 'civicrm_dynamic_token',
          'entity' => 'DynamicToken',
          'bao' => 'CRM_TokenManager_DAO_DynamicToken',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => NULL,
        ],
        'field_name' => [
          'name' => 'field_name',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Field Name'),
          'description' => E::ts('Field name of the token'),
          'required' => TRUE,
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'civicrm_dynamic_token.field_name',
          'table_name' => 'civicrm_dynamic_token',
          'entity' => 'DynamicToken',
          'bao' => 'CRM_TokenManager_DAO_DynamicToken',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => NULL,
        ],
        'smarty_variable_name' => [
          'name' => 'smarty_variable_name',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Smarty Variable Name'),
          'description' => E::ts('Optional Smarty variable name of the token'),
          'required' => FALSE,
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'civicrm_dynamic_token.smarty_variable_name',
          'table_name' => 'civicrm_dynamic_token',
          'entity' => 'DynamicToken',
          'bao' => 'CRM_TokenManager_DAO_DynamicToken',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => NULL,
        ],
        'value' => [
          'name' => 'value',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Token Value'),
          'description' => E::ts('Value of the Token'),
          'required' => TRUE,
          'maxlength' => 1000,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'civicrm_dynamic_token.value',
          'table_name' => 'civicrm_dynamic_token',
          'entity' => 'DynamicToken',
          'bao' => 'CRM_TokenManager_DAO_DynamicToken',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => NULL,
        ],
        'description' => [
          'name' => 'description',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Token Description'),
          'description' => E::ts('Description of the Token'),
          'required' => FALSE,
          'maxlength' => 1000,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'civicrm_dynamic_token.description',
          'table_name' => 'civicrm_dynamic_token',
          'entity' => 'DynamicToken',
          'bao' => 'CRM_TokenManager_DAO_DynamicToken',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => NULL,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'dynamic_token', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'dynamic_token', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
